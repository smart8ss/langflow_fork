{"id":"9b086f1a-2bd4-4253-99c3-7a77bba63033","data":{"nodes":[{"id":"PromptTemplate-jq8nG","type":"genericNode","position":{"x":669.261229743741,"y":307.4120639063586},"data":{"type":"PromptTemplate","node":{"template":{"output_parser":{"type":"BaseOutputParser","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"output_parser","advanced":false,"dynamic":true,"info":"","title_case":true},"input_types":{"type":"dict","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"input_types","advanced":false,"dynamic":true,"info":"","title_case":true},"input_variables":{"type":"str","required":true,"placeholder":"","list":true,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"input_variables","advanced":false,"dynamic":true,"info":"","title_case":true,"value":["question","answer","Template"]},"metadata":{"type":"dict","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"metadata","advanced":false,"dynamic":true,"info":"","title_case":true},"name":{"type":"str","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"name","advanced":false,"dynamic":true,"info":"","title_case":true},"partial_variables":{"type":"dict","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"partial_variables","advanced":false,"dynamic":true,"info":"","title_case":true},"tags":{"type":"str","required":false,"placeholder":"","list":true,"show":false,"multiline":false,"fileTypes":[],"password":false,"name":"tags","advanced":false,"dynamic":true,"info":"","title_case":true},"template":{"type":"prompt","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"fileTypes":[],"password":false,"name":"template","advanced":false,"dynamic":true,"info":"","title_case":true,"value":"you are an ai that will score answers based on the provided template. \n\nThe following is the question the user has to answer.\nQ : {question}\n\nThe following is the answer the user has given .\nA : {answer}\n\nThe following is the template.\n{Template} \n\nRate the score out of 4.\ngive reasons for the provided score.\n\nuser:What is my score?\nAI:"},"template_format":{"type":"str","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"value":"f-string","fileTypes":[],"password":false,"name":"template_format","advanced":false,"dynamic":true,"info":"","title_case":true},"validate_template":{"type":"bool","required":false,"placeholder":"","list":false,"show":false,"multiline":false,"value":false,"fileTypes":[],"password":false,"name":"validate_template","advanced":false,"dynamic":true,"info":"","title_case":true},"_type":"PromptTemplate","question":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":true,"value":"","fileTypes":[],"file_path":"","password":false,"name":"question","display_name":"question","advanced":false,"input_types":["Document","BaseOutputParser"],"dynamic":false,"info":"","title_case":true},"answer":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":true,"value":"","fileTypes":[],"file_path":"","password":false,"name":"answer","display_name":"answer","advanced":false,"input_types":["Document","BaseOutputParser"],"dynamic":false,"info":"","title_case":true},"Template":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":true,"value":"","fileTypes":[],"file_path":"","password":false,"name":"Template","display_name":"Template","advanced":false,"input_types":["Document","BaseOutputParser"],"dynamic":false,"info":"","title_case":true}},"description":"A prompt template for a language model.","icon":null,"base_classes":["BasePromptTemplate","StringPromptTemplate","PromptTemplate"],"name":"","display_name":"PromptTemplate","documentation":"https://python.langchain.com/docs/modules/model_io/prompts/prompt_templates/","custom_fields":{"":["question","answer","Template"]},"output_types":[],"full_path":null,"field_formatters":{},"beta":false,"error":null},"id":"PromptTemplate-jq8nG","description":"A prompt template for a language model.","display_name":"PromptTemplate"},"selected":false,"width":384,"height":562,"positionAbsolute":{"x":669.261229743741,"y":307.4120639063586},"dragging":false},{"id":"ChatOpenAI-TmC35","type":"genericNode","position":{"x":641.3446293423005,"y":-553.9561489606311},"data":{"type":"ChatOpenAI","node":{"template":{"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Optional, Union\n\nfrom langchain.llms import BaseLLM\nfrom langchain_community.chat_models.openai import ChatOpenAI\n\nfrom langflow import CustomComponent\nfrom langflow.field_typing import BaseLanguageModel, NestedDict\n\n\nclass ChatOpenAIComponent(CustomComponent):\n    display_name = \"ChatOpenAI\"\n    description = \"`OpenAI` Chat large language models API.\"\n\n    def build_config(self):\n        return {\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"field_type\": \"int\",\n                \"advanced\": False,\n                \"required\": False,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"field_type\": \"NestedDict\",\n                \"advanced\": True,\n                \"required\": False,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"options\": [\n                    \"gpt-4-turbo-preview\",\n                    \"gpt-4-0125-preview\",\n                    \"gpt-4-1106-preview\",\n                    \"gpt-4-vision-preview\",\n                    \"gpt-3.5-turbo-0125\",\n                    \"gpt-3.5-turbo-1106\",\n                ],\n            },\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"field_type\": \"str\",\n                \"advanced\": False,\n                \"required\": False,\n                \"password\": False,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"field_type\": \"float\",\n                \"advanced\": False,\n                \"required\": False,\n                \"value\": 0.7,\n            },\n        }\n\n    def build(\n        self,\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        model_name: str = \"gpt-4-1106-preview\",\n        openai_api_base: Optional[str] = None,\n        openai_api_key: Optional[str] = None,\n        temperature: float = 0.7,\n    ) -> Union[BaseLanguageModel, BaseLLM]:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        return ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=openai_api_key,\n            temperature=temperature,\n        )\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"max_tokens":{"type":"int","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":256,"fileTypes":[],"file_path":"","password":false,"name":"max_tokens","display_name":"Max Tokens","advanced":false,"dynamic":false,"info":"","title_case":true},"model_kwargs":{"type":"NestedDict","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":{},"fileTypes":[],"file_path":"","password":false,"name":"model_kwargs","display_name":"Model Kwargs","advanced":true,"dynamic":false,"info":"","title_case":true},"model_name":{"type":"str","required":false,"placeholder":"","list":true,"show":true,"multiline":false,"value":"gpt-4-1106-preview","fileTypes":[],"file_path":"","password":false,"options":["gpt-4-turbo-preview","gpt-4-0125-preview","gpt-4-1106-preview","gpt-4-vision-preview","gpt-3.5-turbo-0125","gpt-3.5-turbo-1106"],"name":"model_name","display_name":"Model Name","advanced":false,"dynamic":false,"info":"","title_case":true},"openai_api_base":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"openai_api_base","display_name":"OpenAI API Base","advanced":false,"dynamic":false,"info":"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.","title_case":true},"openai_api_key":{"type":"str","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"openai_api_key","display_name":"OpenAI API Key","advanced":false,"dynamic":false,"info":"","title_case":true,"value":"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"},"temperature":{"type":"float","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":0.7,"fileTypes":[],"file_path":"","password":false,"name":"temperature","display_name":"Temperature","advanced":false,"dynamic":false,"info":"","rangeSpec":{"min":-1,"max":1,"step":0.1},"title_case":true},"_type":"CustomComponent"},"description":"`OpenAI` Chat large language models API.","base_classes":["BaseLanguageModel","BaseLanguageModel","BaseLLM"],"display_name":"ChatOpenAI","documentation":"","custom_fields":{"max_tokens":null,"model_kwargs":null,"model_name":null,"openai_api_base":null,"openai_api_key":null,"temperature":null},"output_types":["BaseLanguageModel","BaseLLM"],"field_formatters":{},"beta":true},"id":"ChatOpenAI-TmC35","description":"`OpenAI` Chat large language models API.","display_name":"ChatOpenAI"},"selected":false,"width":384,"height":729,"positionAbsolute":{"x":641.3446293423005,"y":-553.9561489606311},"dragging":false},{"id":"TextLoader-U1INH","type":"genericNode","position":{"x":-12.821006531138892,"y":296.89719037035},"data":{"type":"TextLoader","node":{"template":{"file_path":{"type":"file","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"","fileTypes":[".txt"],"file_path":"/home/user/.cache/langflow/18a51931-ff22-4c3b-95f5-2282a99a6606/5c31070d51f24513f3888ad07077e80c2b5b5b2eef5c430c3ec09d70271b8f2f.txt","password":false,"name":"file_path","advanced":false,"dynamic":false,"info":"","title_case":true},"metadata":{"type":"dict","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":[{"{}":""}],"fileTypes":[],"file_path":"","password":false,"name":"metadata","display_name":"Metadata","advanced":false,"dynamic":false,"info":"","title_case":true},"_type":"TextLoader"},"description":"Load text file.","base_classes":["Document"],"display_name":"TextLoader","documentation":"https://python.langchain.com/docs/modules/data_connection/document_loaders/","custom_fields":{},"output_types":["Document"],"field_formatters":{},"beta":false},"id":"TextLoader-U1INH"},"selected":false,"width":384,"height":366,"positionAbsolute":{"x":-12.821006531138892,"y":296.89719037035},"dragging":true},{"id":"TextLoader-1GB0a","type":"genericNode","position":{"x":-6.605871953033784,"y":738.965158821892},"data":{"type":"TextLoader","node":{"template":{"file_path":{"type":"file","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"","fileTypes":[".txt"],"file_path":"/home/user/.cache/langflow/18a51931-ff22-4c3b-95f5-2282a99a6606/c9da769fc821a0b4b677eba8d3c471f1af46e3898e46e1b36971df0be5db979d.txt","password":false,"name":"file_path","advanced":false,"dynamic":false,"info":"","title_case":true},"metadata":{"type":"dict","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":[{"{}":""}],"fileTypes":[],"file_path":"","password":false,"name":"metadata","display_name":"Metadata","advanced":false,"dynamic":false,"info":"","title_case":true},"_type":"TextLoader"},"description":"Load text file.","base_classes":["Document"],"display_name":"TextLoader","documentation":"https://python.langchain.com/docs/modules/data_connection/document_loaders/","custom_fields":{},"output_types":["Document"],"field_formatters":{},"beta":false},"id":"TextLoader-1GB0a"},"selected":false,"width":384,"height":366,"positionAbsolute":{"x":-6.605871953033784,"y":738.965158821892},"dragging":false},{"id":"LLMChain-1N9fE","type":"genericNode","position":{"x":1226.6701751686353,"y":151.3565312030525},"data":{"type":"LLMChain","node":{"template":{"llm":{"type":"BaseLanguageModel","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"llm","display_name":"LLM","advanced":false,"dynamic":false,"info":"","title_case":true},"memory":{"type":"BaseMemory","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"memory","display_name":"Memory","advanced":false,"dynamic":false,"info":"","title_case":true},"prompt":{"type":"BasePromptTemplate","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"prompt","display_name":"Prompt","advanced":false,"dynamic":false,"info":"","title_case":true},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Callable, Optional, Union\n\nfrom langchain.chains import LLMChain\n\nfrom langflow import CustomComponent\nfrom langflow.field_typing import (\n    BaseLanguageModel,\n    BaseMemory,\n    BasePromptTemplate,\n    Chain,\n)\n\n\nclass LLMChainComponent(CustomComponent):\n    display_name = \"LLMChain\"\n    description = \"Chain to run queries against LLMs\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        prompt: BasePromptTemplate,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable, LLMChain]:\n        return LLMChain(prompt=prompt, llm=llm, memory=memory)\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"_type":"CustomComponent"},"description":"Chain to run queries against LLMs","base_classes":["Chain","Callable","Chain","LLMChain"],"display_name":"LLMChain","documentation":"","custom_fields":{"prompt":null,"llm":null,"memory":null},"output_types":["Chain","Callable","LLMChain"],"field_formatters":{},"beta":true},"id":"LLMChain-1N9fE"},"selected":false,"width":384,"height":424,"positionAbsolute":{"x":1226.6701751686353,"y":151.3565312030525},"dragging":false},{"id":"TextLoader-dnQ6H","type":"genericNode","position":{"x":-22.726001306080605,"y":-163.15648746376215},"data":{"type":"TextLoader","node":{"template":{"file_path":{"type":"file","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"","fileTypes":[".txt"],"file_path":"/home/user/.cache/langflow/9b086f1a-2bd4-4253-99c3-7a77bba63033/eeb78fe23e7383e1be3cd5d7a8cdffff2b9b3b000aa8822ec6f8cb0eff1a6c4c.txt","password":false,"name":"file_path","advanced":false,"dynamic":false,"info":"","title_case":true},"metadata":{"type":"dict","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":[{"{}":""}],"fileTypes":[],"file_path":"","password":false,"name":"metadata","display_name":"Metadata","advanced":false,"dynamic":false,"info":"","title_case":true},"_type":"TextLoader"},"description":"Load text file.","base_classes":["Document"],"display_name":"TextLoader","documentation":"https://python.langchain.com/docs/modules/data_connection/document_loaders/","custom_fields":{},"output_types":["Document"],"field_formatters":{},"beta":false},"id":"TextLoader-dnQ6H"},"selected":false,"width":384,"height":365,"positionAbsolute":{"x":-22.726001306080605,"y":-163.15648746376215},"dragging":false}],"edges":[{"source":"TextLoader-U1INH","sourceHandle":"{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œTextLoaderœ,œidœ:œTextLoader-U1INHœ}","target":"PromptTemplate-jq8nG","targetHandle":"{œfieldNameœ:œanswerœ,œidœ:œPromptTemplate-jq8nGœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}","data":{"targetHandle":{"fieldName":"answer","id":"PromptTemplate-jq8nG","inputTypes":["Document","BaseOutputParser"],"type":"str"},"sourceHandle":{"baseClasses":["Document"],"dataType":"TextLoader","id":"TextLoader-U1INH"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-TextLoader-U1INH{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œTextLoaderœ,œidœ:œTextLoader-U1INHœ}-PromptTemplate-jq8nG{œfieldNameœ:œanswerœ,œidœ:œPromptTemplate-jq8nGœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"},{"source":"TextLoader-1GB0a","sourceHandle":"{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œTextLoaderœ,œidœ:œTextLoader-1GB0aœ}","target":"PromptTemplate-jq8nG","targetHandle":"{œfieldNameœ:œquestionœ,œidœ:œPromptTemplate-jq8nGœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}","data":{"targetHandle":{"fieldName":"question","id":"PromptTemplate-jq8nG","inputTypes":["Document","BaseOutputParser"],"type":"str"},"sourceHandle":{"baseClasses":["Document"],"dataType":"TextLoader","id":"TextLoader-1GB0a"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-TextLoader-1GB0a{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œTextLoaderœ,œidœ:œTextLoader-1GB0aœ}-PromptTemplate-jq8nG{œfieldNameœ:œquestionœ,œidœ:œPromptTemplate-jq8nGœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"},{"source":"PromptTemplate-jq8nG","sourceHandle":"{œbaseClassesœ:[œBasePromptTemplateœ,œStringPromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-jq8nGœ}","target":"LLMChain-1N9fE","targetHandle":"{œfieldNameœ:œpromptœ,œidœ:œLLMChain-1N9fEœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}","data":{"targetHandle":{"fieldName":"prompt","id":"LLMChain-1N9fE","inputTypes":null,"type":"BasePromptTemplate"},"sourceHandle":{"baseClasses":["BasePromptTemplate","StringPromptTemplate","PromptTemplate"],"dataType":"PromptTemplate","id":"PromptTemplate-jq8nG"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-PromptTemplate-jq8nG{œbaseClassesœ:[œBasePromptTemplateœ,œStringPromptTemplateœ,œPromptTemplateœ],œdataTypeœ:œPromptTemplateœ,œidœ:œPromptTemplate-jq8nGœ}-LLMChain-1N9fE{œfieldNameœ:œpromptœ,œidœ:œLLMChain-1N9fEœ,œinputTypesœ:null,œtypeœ:œBasePromptTemplateœ}"},{"source":"ChatOpenAI-TmC35","sourceHandle":"{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-TmC35œ}","target":"LLMChain-1N9fE","targetHandle":"{œfieldNameœ:œllmœ,œidœ:œLLMChain-1N9fEœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}","data":{"targetHandle":{"fieldName":"llm","id":"LLMChain-1N9fE","inputTypes":null,"type":"BaseLanguageModel"},"sourceHandle":{"baseClasses":["BaseLanguageModel","BaseLanguageModel","BaseLLM"],"dataType":"ChatOpenAI","id":"ChatOpenAI-TmC35"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-ChatOpenAI-TmC35{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-TmC35œ}-LLMChain-1N9fE{œfieldNameœ:œllmœ,œidœ:œLLMChain-1N9fEœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"},{"source":"TextLoader-dnQ6H","sourceHandle":"{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œTextLoaderœ,œidœ:œTextLoader-dnQ6Hœ}","target":"PromptTemplate-jq8nG","targetHandle":"{œfieldNameœ:œTemplateœ,œidœ:œPromptTemplate-jq8nGœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}","data":{"targetHandle":{"fieldName":"Template","id":"PromptTemplate-jq8nG","inputTypes":["Document","BaseOutputParser"],"type":"str"},"sourceHandle":{"baseClasses":["Document"],"dataType":"TextLoader","id":"TextLoader-dnQ6H"}},"style":{"stroke":"#555"},"className":"stroke-foreground  stroke-connection","animated":false,"id":"reactflow__edge-TextLoader-dnQ6H{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œTextLoaderœ,œidœ:œTextLoader-dnQ6Hœ}-PromptTemplate-jq8nG{œfieldNameœ:œTemplateœ,œidœ:œPromptTemplate-jq8nGœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ],œtypeœ:œstrœ}"}],"viewport":{"x":243.04383535636066,"y":274.3646467406145,"zoom":0.6597539553864485}},"description":"Smart Chains, Smarter Conversations.","name":"Rating SCORE","last_tested_version":"0.6.12","is_component":false}